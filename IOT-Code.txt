#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>

const char* ssid = "PLDTHOMEFIBR2f1a8"; // Your WiFi SSID
const char* password = "PLDTWIFImuk26"; // Your WiFi password

const int alcoholA = 0; // Define pin for AO pin of the sensor
const int alcoholD = 12; // Define pin for D6 pin of the sensor

bool readyToSend = true; // Flag to control the sending of HTTP requests

void setup() {
  Serial.begin(9600);
  pinMode(alcoholD, INPUT); // Set digital pin as INPUT
  pinMode(alcoholA, INPUT); // Set analog pin as INPUT

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
}

void loop() {
  if (readyToSend && WiFi.status() == WL_CONNECTED) {
    int alcohol_readD = digitalRead(alcoholD); // Read sensor digital values
    int alcohol_readA = analogRead(alcoholA); // Read sensor analog values
    float alcoholValue = map(alcohol_readA, 0, 1023, 4, 400); // Convert values
    float alcoholCon = alcoholValue / 100.0; // Convert to mg/L

    Serial.print("Digital Data: ");
    Serial.println(alcohol_readD);
    Serial.print("Analog Data: ");
    Serial.println(alcohol_readA);
    Serial.print("Alcohol Concentration: ");
    Serial.print(alcoholCon);
    Serial.println(" mg/L");

    WiFiClient client;
    HTTPClient http;

    String url = "http://192.168.1.4:3000/api/data"; // Updated URL to the Node.js server
    http.begin(client, url);
    http.addHeader("Content-Type", "application/json");

    // Construct JSON string
    String json = "{\"alcoholD\": " + String(alcohol_readD) +
                  ", \"alcoholA\": " + String(alcohol_readA) +
                  ", \"alcoholCon\": " + String(alcoholCon) + "}";

    readyToSend = false; // Set flag to false to prevent new requests
    int httpResponseCode = http.POST(json);

    if (httpResponseCode > 0) {
      String response = http.getString();
      Serial.println("HTTP Response code: " + httpResponseCode);
      Serial.println("Response: " + response);
    } else {
      Serial.print("Error sending data to server. HTTP response code: ");
      Serial.println(httpResponseCode);
      Serial.println(http.errorToString(httpResponseCode));
    }

    http.end();
    readyToSend = true; // Set flag back to true once the request is done
  }
  delay(1000); // Delay between readings
}